package com.healthcare.db.model;

import java.util.ArrayList;
import java.util.List;

public class QcDetailsExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table qc_details
	 * @mbggenerated  Tue Apr 01 20:15:29 ICT 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table qc_details
	 * @mbggenerated  Tue Apr 01 20:15:29 ICT 2014
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table qc_details
	 * @mbggenerated  Tue Apr 01 20:15:29 ICT 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table qc_details
	 * @mbggenerated  Tue Apr 01 20:15:29 ICT 2014
	 */
	public QcDetailsExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table qc_details
	 * @mbggenerated  Tue Apr 01 20:15:29 ICT 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table qc_details
	 * @mbggenerated  Tue Apr 01 20:15:29 ICT 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table qc_details
	 * @mbggenerated  Tue Apr 01 20:15:29 ICT 2014
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table qc_details
	 * @mbggenerated  Tue Apr 01 20:15:29 ICT 2014
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table qc_details
	 * @mbggenerated  Tue Apr 01 20:15:29 ICT 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table qc_details
	 * @mbggenerated  Tue Apr 01 20:15:29 ICT 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table qc_details
	 * @mbggenerated  Tue Apr 01 20:15:29 ICT 2014
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table qc_details
	 * @mbggenerated  Tue Apr 01 20:15:29 ICT 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table qc_details
	 * @mbggenerated  Tue Apr 01 20:15:29 ICT 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table qc_details
	 * @mbggenerated  Tue Apr 01 20:15:29 ICT 2014
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table qc_details
	 * @mbggenerated  Tue Apr 01 20:15:29 ICT 2014
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andQcIdIsNull() {
			addCriterion("qc_id is null");
			return (Criteria) this;
		}

		public Criteria andQcIdIsNotNull() {
			addCriterion("qc_id is not null");
			return (Criteria) this;
		}

		public Criteria andQcIdEqualTo(Integer value) {
			addCriterion("qc_id =", value, "qcId");
			return (Criteria) this;
		}

		public Criteria andQcIdNotEqualTo(Integer value) {
			addCriterion("qc_id <>", value, "qcId");
			return (Criteria) this;
		}

		public Criteria andQcIdGreaterThan(Integer value) {
			addCriterion("qc_id >", value, "qcId");
			return (Criteria) this;
		}

		public Criteria andQcIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("qc_id >=", value, "qcId");
			return (Criteria) this;
		}

		public Criteria andQcIdLessThan(Integer value) {
			addCriterion("qc_id <", value, "qcId");
			return (Criteria) this;
		}

		public Criteria andQcIdLessThanOrEqualTo(Integer value) {
			addCriterion("qc_id <=", value, "qcId");
			return (Criteria) this;
		}

		public Criteria andQcIdIn(List<Integer> values) {
			addCriterion("qc_id in", values, "qcId");
			return (Criteria) this;
		}

		public Criteria andQcIdNotIn(List<Integer> values) {
			addCriterion("qc_id not in", values, "qcId");
			return (Criteria) this;
		}

		public Criteria andQcIdBetween(Integer value1, Integer value2) {
			addCriterion("qc_id between", value1, value2, "qcId");
			return (Criteria) this;
		}

		public Criteria andQcIdNotBetween(Integer value1, Integer value2) {
			addCriterion("qc_id not between", value1, value2, "qcId");
			return (Criteria) this;
		}

		public Criteria andStgIdIsNull() {
			addCriterion("stg_id is null");
			return (Criteria) this;
		}

		public Criteria andStgIdIsNotNull() {
			addCriterion("stg_id is not null");
			return (Criteria) this;
		}

		public Criteria andStgIdEqualTo(Integer value) {
			addCriterion("stg_id =", value, "stgId");
			return (Criteria) this;
		}

		public Criteria andStgIdNotEqualTo(Integer value) {
			addCriterion("stg_id <>", value, "stgId");
			return (Criteria) this;
		}

		public Criteria andStgIdGreaterThan(Integer value) {
			addCriterion("stg_id >", value, "stgId");
			return (Criteria) this;
		}

		public Criteria andStgIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("stg_id >=", value, "stgId");
			return (Criteria) this;
		}

		public Criteria andStgIdLessThan(Integer value) {
			addCriterion("stg_id <", value, "stgId");
			return (Criteria) this;
		}

		public Criteria andStgIdLessThanOrEqualTo(Integer value) {
			addCriterion("stg_id <=", value, "stgId");
			return (Criteria) this;
		}

		public Criteria andStgIdIn(List<Integer> values) {
			addCriterion("stg_id in", values, "stgId");
			return (Criteria) this;
		}

		public Criteria andStgIdNotIn(List<Integer> values) {
			addCriterion("stg_id not in", values, "stgId");
			return (Criteria) this;
		}

		public Criteria andStgIdBetween(Integer value1, Integer value2) {
			addCriterion("stg_id between", value1, value2, "stgId");
			return (Criteria) this;
		}

		public Criteria andStgIdNotBetween(Integer value1, Integer value2) {
			addCriterion("stg_id not between", value1, value2, "stgId");
			return (Criteria) this;
		}

		public Criteria andItemIdIsNull() {
			addCriterion("item_id is null");
			return (Criteria) this;
		}

		public Criteria andItemIdIsNotNull() {
			addCriterion("item_id is not null");
			return (Criteria) this;
		}

		public Criteria andItemIdEqualTo(Integer value) {
			addCriterion("item_id =", value, "itemId");
			return (Criteria) this;
		}

		public Criteria andItemIdNotEqualTo(Integer value) {
			addCriterion("item_id <>", value, "itemId");
			return (Criteria) this;
		}

		public Criteria andItemIdGreaterThan(Integer value) {
			addCriterion("item_id >", value, "itemId");
			return (Criteria) this;
		}

		public Criteria andItemIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("item_id >=", value, "itemId");
			return (Criteria) this;
		}

		public Criteria andItemIdLessThan(Integer value) {
			addCriterion("item_id <", value, "itemId");
			return (Criteria) this;
		}

		public Criteria andItemIdLessThanOrEqualTo(Integer value) {
			addCriterion("item_id <=", value, "itemId");
			return (Criteria) this;
		}

		public Criteria andItemIdIn(List<Integer> values) {
			addCriterion("item_id in", values, "itemId");
			return (Criteria) this;
		}

		public Criteria andItemIdNotIn(List<Integer> values) {
			addCriterion("item_id not in", values, "itemId");
			return (Criteria) this;
		}

		public Criteria andItemIdBetween(Integer value1, Integer value2) {
			addCriterion("item_id between", value1, value2, "itemId");
			return (Criteria) this;
		}

		public Criteria andItemIdNotBetween(Integer value1, Integer value2) {
			addCriterion("item_id not between", value1, value2, "itemId");
			return (Criteria) this;
		}

		public Criteria andMinValueIsNull() {
			addCriterion("min_value is null");
			return (Criteria) this;
		}

		public Criteria andMinValueIsNotNull() {
			addCriterion("min_value is not null");
			return (Criteria) this;
		}

		public Criteria andMinValueEqualTo(Float value) {
			addCriterion("min_value =", value, "minValue");
			return (Criteria) this;
		}

		public Criteria andMinValueNotEqualTo(Float value) {
			addCriterion("min_value <>", value, "minValue");
			return (Criteria) this;
		}

		public Criteria andMinValueGreaterThan(Float value) {
			addCriterion("min_value >", value, "minValue");
			return (Criteria) this;
		}

		public Criteria andMinValueGreaterThanOrEqualTo(Float value) {
			addCriterion("min_value >=", value, "minValue");
			return (Criteria) this;
		}

		public Criteria andMinValueLessThan(Float value) {
			addCriterion("min_value <", value, "minValue");
			return (Criteria) this;
		}

		public Criteria andMinValueLessThanOrEqualTo(Float value) {
			addCriterion("min_value <=", value, "minValue");
			return (Criteria) this;
		}

		public Criteria andMinValueIn(List<Float> values) {
			addCriterion("min_value in", values, "minValue");
			return (Criteria) this;
		}

		public Criteria andMinValueNotIn(List<Float> values) {
			addCriterion("min_value not in", values, "minValue");
			return (Criteria) this;
		}

		public Criteria andMinValueBetween(Float value1, Float value2) {
			addCriterion("min_value between", value1, value2, "minValue");
			return (Criteria) this;
		}

		public Criteria andMinValueNotBetween(Float value1, Float value2) {
			addCriterion("min_value not between", value1, value2, "minValue");
			return (Criteria) this;
		}

		public Criteria andMaxValueIsNull() {
			addCriterion("max_value is null");
			return (Criteria) this;
		}

		public Criteria andMaxValueIsNotNull() {
			addCriterion("max_value is not null");
			return (Criteria) this;
		}

		public Criteria andMaxValueEqualTo(Float value) {
			addCriterion("max_value =", value, "maxValue");
			return (Criteria) this;
		}

		public Criteria andMaxValueNotEqualTo(Float value) {
			addCriterion("max_value <>", value, "maxValue");
			return (Criteria) this;
		}

		public Criteria andMaxValueGreaterThan(Float value) {
			addCriterion("max_value >", value, "maxValue");
			return (Criteria) this;
		}

		public Criteria andMaxValueGreaterThanOrEqualTo(Float value) {
			addCriterion("max_value >=", value, "maxValue");
			return (Criteria) this;
		}

		public Criteria andMaxValueLessThan(Float value) {
			addCriterion("max_value <", value, "maxValue");
			return (Criteria) this;
		}

		public Criteria andMaxValueLessThanOrEqualTo(Float value) {
			addCriterion("max_value <=", value, "maxValue");
			return (Criteria) this;
		}

		public Criteria andMaxValueIn(List<Float> values) {
			addCriterion("max_value in", values, "maxValue");
			return (Criteria) this;
		}

		public Criteria andMaxValueNotIn(List<Float> values) {
			addCriterion("max_value not in", values, "maxValue");
			return (Criteria) this;
		}

		public Criteria andMaxValueBetween(Float value1, Float value2) {
			addCriterion("max_value between", value1, value2, "maxValue");
			return (Criteria) this;
		}

		public Criteria andMaxValueNotBetween(Float value1, Float value2) {
			addCriterion("max_value not between", value1, value2, "maxValue");
			return (Criteria) this;
		}

		public Criteria andValueIsNull() {
			addCriterion("value is null");
			return (Criteria) this;
		}

		public Criteria andValueIsNotNull() {
			addCriterion("value is not null");
			return (Criteria) this;
		}

		public Criteria andValueEqualTo(Float value) {
			addCriterion("value =", value, "value");
			return (Criteria) this;
		}

		public Criteria andValueNotEqualTo(Float value) {
			addCriterion("value <>", value, "value");
			return (Criteria) this;
		}

		public Criteria andValueGreaterThan(Float value) {
			addCriterion("value >", value, "value");
			return (Criteria) this;
		}

		public Criteria andValueGreaterThanOrEqualTo(Float value) {
			addCriterion("value >=", value, "value");
			return (Criteria) this;
		}

		public Criteria andValueLessThan(Float value) {
			addCriterion("value <", value, "value");
			return (Criteria) this;
		}

		public Criteria andValueLessThanOrEqualTo(Float value) {
			addCriterion("value <=", value, "value");
			return (Criteria) this;
		}

		public Criteria andValueIn(List<Float> values) {
			addCriterion("value in", values, "value");
			return (Criteria) this;
		}

		public Criteria andValueNotIn(List<Float> values) {
			addCriterion("value not in", values, "value");
			return (Criteria) this;
		}

		public Criteria andValueBetween(Float value1, Float value2) {
			addCriterion("value between", value1, value2, "value");
			return (Criteria) this;
		}

		public Criteria andValueNotBetween(Float value1, Float value2) {
			addCriterion("value not between", value1, value2, "value");
			return (Criteria) this;
		}

		public Criteria andXbarIsNull() {
			addCriterion("xbar is null");
			return (Criteria) this;
		}

		public Criteria andXbarIsNotNull() {
			addCriterion("xbar is not null");
			return (Criteria) this;
		}

		public Criteria andXbarEqualTo(Float value) {
			addCriterion("xbar =", value, "xbar");
			return (Criteria) this;
		}

		public Criteria andXbarNotEqualTo(Float value) {
			addCriterion("xbar <>", value, "xbar");
			return (Criteria) this;
		}

		public Criteria andXbarGreaterThan(Float value) {
			addCriterion("xbar >", value, "xbar");
			return (Criteria) this;
		}

		public Criteria andXbarGreaterThanOrEqualTo(Float value) {
			addCriterion("xbar >=", value, "xbar");
			return (Criteria) this;
		}

		public Criteria andXbarLessThan(Float value) {
			addCriterion("xbar <", value, "xbar");
			return (Criteria) this;
		}

		public Criteria andXbarLessThanOrEqualTo(Float value) {
			addCriterion("xbar <=", value, "xbar");
			return (Criteria) this;
		}

		public Criteria andXbarIn(List<Float> values) {
			addCriterion("xbar in", values, "xbar");
			return (Criteria) this;
		}

		public Criteria andXbarNotIn(List<Float> values) {
			addCriterion("xbar not in", values, "xbar");
			return (Criteria) this;
		}

		public Criteria andXbarBetween(Float value1, Float value2) {
			addCriterion("xbar between", value1, value2, "xbar");
			return (Criteria) this;
		}

		public Criteria andXbarNotBetween(Float value1, Float value2) {
			addCriterion("xbar not between", value1, value2, "xbar");
			return (Criteria) this;
		}

		public Criteria andSdIsNull() {
			addCriterion("sd is null");
			return (Criteria) this;
		}

		public Criteria andSdIsNotNull() {
			addCriterion("sd is not null");
			return (Criteria) this;
		}

		public Criteria andSdEqualTo(Float value) {
			addCriterion("sd =", value, "sd");
			return (Criteria) this;
		}

		public Criteria andSdNotEqualTo(Float value) {
			addCriterion("sd <>", value, "sd");
			return (Criteria) this;
		}

		public Criteria andSdGreaterThan(Float value) {
			addCriterion("sd >", value, "sd");
			return (Criteria) this;
		}

		public Criteria andSdGreaterThanOrEqualTo(Float value) {
			addCriterion("sd >=", value, "sd");
			return (Criteria) this;
		}

		public Criteria andSdLessThan(Float value) {
			addCriterion("sd <", value, "sd");
			return (Criteria) this;
		}

		public Criteria andSdLessThanOrEqualTo(Float value) {
			addCriterion("sd <=", value, "sd");
			return (Criteria) this;
		}

		public Criteria andSdIn(List<Float> values) {
			addCriterion("sd in", values, "sd");
			return (Criteria) this;
		}

		public Criteria andSdNotIn(List<Float> values) {
			addCriterion("sd not in", values, "sd");
			return (Criteria) this;
		}

		public Criteria andSdBetween(Float value1, Float value2) {
			addCriterion("sd between", value1, value2, "sd");
			return (Criteria) this;
		}

		public Criteria andSdNotBetween(Float value1, Float value2) {
			addCriterion("sd not between", value1, value2, "sd");
			return (Criteria) this;
		}

		public Criteria andIstatusIsNull() {
			addCriterion("istatus is null");
			return (Criteria) this;
		}

		public Criteria andIstatusIsNotNull() {
			addCriterion("istatus is not null");
			return (Criteria) this;
		}

		public Criteria andIstatusEqualTo(Integer value) {
			addCriterion("istatus =", value, "istatus");
			return (Criteria) this;
		}

		public Criteria andIstatusNotEqualTo(Integer value) {
			addCriterion("istatus <>", value, "istatus");
			return (Criteria) this;
		}

		public Criteria andIstatusGreaterThan(Integer value) {
			addCriterion("istatus >", value, "istatus");
			return (Criteria) this;
		}

		public Criteria andIstatusGreaterThanOrEqualTo(Integer value) {
			addCriterion("istatus >=", value, "istatus");
			return (Criteria) this;
		}

		public Criteria andIstatusLessThan(Integer value) {
			addCriterion("istatus <", value, "istatus");
			return (Criteria) this;
		}

		public Criteria andIstatusLessThanOrEqualTo(Integer value) {
			addCriterion("istatus <=", value, "istatus");
			return (Criteria) this;
		}

		public Criteria andIstatusIn(List<Integer> values) {
			addCriterion("istatus in", values, "istatus");
			return (Criteria) this;
		}

		public Criteria andIstatusNotIn(List<Integer> values) {
			addCriterion("istatus not in", values, "istatus");
			return (Criteria) this;
		}

		public Criteria andIstatusBetween(Integer value1, Integer value2) {
			addCriterion("istatus between", value1, value2, "istatus");
			return (Criteria) this;
		}

		public Criteria andIstatusNotBetween(Integer value1, Integer value2) {
			addCriterion("istatus not between", value1, value2, "istatus");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table qc_details
	 * @mbggenerated  Tue Apr 01 20:15:29 ICT 2014
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table qc_details
     *
     * @mbggenerated do_not_delete_during_merge Tue Apr 01 17:49:10 ICT 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}