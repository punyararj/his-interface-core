<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.healthcare.db.client.TestResultMapper">

	<resultMap id="TestitemFullInfo" type="com.healthcaresolutions.hisif.beans.TestResultItem">
		<result column="test.test_id" property="test.testId" jdbcType="INTEGER" />
	    <result column="item.item_id" property="item.itemId" jdbcType="INTEGER" />
	    <result column="item.item_name" jdbcType="VARCHAR" property="item.itemName" />
	    <result column="item.unit" jdbcType="VARCHAR" property="item.unit" />
	    <result column="item.item_desc" jdbcType="VARCHAR" property="item.itemDesc" />
	    <result column="item.range.val_range_lb" property="item.range.valRangeLb" jdbcType="DOUBLE" />
    	<result column="item.range.val_range_ub" property="item.range.valRangeUb" jdbcType="DOUBLE" />
    	<result column="item.range.val_range_clb" property="item.range.valRangeClb" jdbcType="DOUBLE" />
    	<result column="item.range.val_range_cub" property="item.range.valRangeCub" jdbcType="DOUBLE" />
	    <result column="testitem.value" property="value" jdbcType="VARCHAR" />
	    <result column="testitem.errorcode" property="errorcode" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="BaseResultMap" type="com.healthcaresolutions.hisif.beans.TestResult">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 19 00:08:10 ICT 2014.
    -->
    <id column="test.test_id" jdbcType="INTEGER" property="testId" />
    <result column="test.test_dt" jdbcType="TIMESTAMP" property="testDt" />
    <result column="test.dock_dt" jdbcType="TIMESTAMP" property="dockDt" />
    <result column="analyzer.analyzer_id" jdbcType="INTEGER" property="analyzer.analyzerId" />
    <result column="analyzer.analyzer_serial" jdbcType="VARCHAR" property="analyzer.analyzerSerial" />
    <result column="analyzer.analyzer_model" jdbcType="VARCHAR" property="analyzer.analyzerModel" />
    <result column="analyzer.analyzer_name" jdbcType="VARCHAR" property="analyzer.analyzerName" />
    <result column="analyzer.analyzer_in" jdbcType="VARCHAR" property="analyzer.analyzerIn" />
    <result column="analyzer.analyzer_group_id" jdbcType="VARCHAR" property="analyzer.analyzerGroupId" />
    <result column="analyzer.analyzer_out" jdbcType="VARCHAR" property="analyzer.analyzerOut" />
    <result column="analyzer.analyzer_desc" jdbcType="VARCHAR" property="analyzer.analyzerDesc" />
    <result column="analyzer.service_code" jdbcType="VARCHAR" property="analyzer.serviceCode" />
    <result column="ward.ward_id" jdbcType="INTEGER" property="ward.wardId" />
    <result column="ward.ward_name" jdbcType="VARCHAR" property="ward.wardName" />
    <result column="ward.ward_in" jdbcType="VARCHAR" property="ward.wardIn" />
    <result column="ward.ward_group" jdbcType="VARCHAR" property="ward.wardGroup" />
    <result column="ward.ward_desc" jdbcType="VARCHAR" property="ward.wardDesc" />
    <result column="staff.staff_id" jdbcType="INTEGER" property="staff.staffId" />
    <result column="staff.staff_code" jdbcType="VARCHAR" property="staff.staffCode" />
    <result column="staff.staff_usr" jdbcType="VARCHAR" property="staff.staffUsr" />
    <result column="staff.staff_pwd" jdbcType="VARCHAR" property="staff.staffPwd" />
    <result column="staff.staff_title" jdbcType="VARCHAR" property="staff.staffTitle" />
    <result column="staff.staff_fname" jdbcType="VARCHAR" property="staff.staffFname" />
    <result column="staff.staff_lname" jdbcType="VARCHAR" property="staff.staffLname" />
    <result column="staff.staff_tel" jdbcType="VARCHAR" property="staff.staffTel" />
    <result column="staff.staff_mobile" jdbcType="VARCHAR" property="staff.staffMobile" />
    <result column="staff.staff_mail" jdbcType="VARCHAR" property="staff.staffMail" />
    <result column="staff.staff_license" jdbcType="VARCHAR" property="staff.staffLicense" />
    <result column="staff.role_id" jdbcType="INTEGER" property="staff.roleId" />
    <result column="patient.p_id" jdbcType="VARCHAR" property="patient.pId" />
    <result column="patient.p_hn" jdbcType="VARCHAR" property="patient.pHn" />
    <result column="patient.p_title" jdbcType="VARCHAR" property="patient.pTitle" />
    <result column="patient.p_fname" jdbcType="VARCHAR" property="patient.pFname" />
    <result column="patient.p_lname" jdbcType="VARCHAR" property="patient.pLname" />
    <result column="patient.p_title_eng" jdbcType="VARCHAR" property="patient.pTitleEng" />
    <result column="patient.p_fname_eng" jdbcType="VARCHAR" property="patient.pFnameEng" />
    <result column="patient.p_lname_eng" jdbcType="VARCHAR" property="patient.pLnameEng" />
    <result column="patient.p_gender" jdbcType="VARCHAR" property="patient.pGender" />
    <result column="patient.p_dob" jdbcType="TIMESTAMP" property="patient.pDob" />
    <result column="patient.p_idno" jdbcType="VARCHAR" property="patient.pIdno" />
    <result column="patient.p_address" jdbcType="VARCHAR" property="patient.pAddress" />
    <result column="patient.p_tel" jdbcType="VARCHAR" property="patient.pTel" />
    <result column="patient.p_mobile" jdbcType="VARCHAR" property="patient.pMobile" />
    <result column="patient.p_email" jdbcType="VARCHAR" property="patient.pEmail" />
    <result column="patient.p_type" jdbcType="VARCHAR" property="patient.pType" />
    <result column="patient.p_registime" jdbcType="TIMESTAMP" property="patient.pRegistime" />
    <result column="patient.last_update" jdbcType="TIMESTAMP" property="patient.lastUpdate" />
    <result column="patient.effective_start_date" jdbcType="TIMESTAMP" property="patient.effectiveStartDate" />
    <result column="patient.effective_end_date" jdbcType="TIMESTAMP" property="patient.effectiveEndDate" />
    <result column="test.status" jdbcType="INTEGER" property="status" />
    <result column="test.comment" jdbcType="VARCHAR" property="comment" />
    <result column="test.exec_time" jdbcType="TIMESTAMP" property="execTime" />
    <result column="test.retry_count" jdbcType="INTEGER" property="retryCount" />
    <result column="test.specimen_type" jdbcType="VARCHAR" property="specimenType" />
    <result column="test.labid" jdbcType="VARCHAR" property="labid" />
    <result column="test.bill_id" jdbcType="VARCHAR" property="billId" />
    <result column="test.order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="test.update_dt" jdbcType="TIMESTAMP" property="updateDt" />
    <result column="test.update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="test.rec_by_command" jdbcType="VARCHAR" property="recByCommand" />
    <result column="test.isprm" jdbcType="VARCHAR" property="isPrm" />
    <result column="test.is_ack" jdbcType="INTEGER" property="isAck" />
    <result column="test.is_edited" jdbcType="INTEGER" property="isEdited" />
    <result column="test.error_code" jdbcType="INTEGER" property="errorCode" />
    <result column="test.enc_type" jdbcType="VARCHAR" property="encType" />
    <result column="test.enc_id" jdbcType="VARCHAR" property="encId" />
    <result column="ploc.ward_id" jdbcType="INTEGER" property="pLoc.wardId" />
    <result column="ploc.ward_name" jdbcType="VARCHAR" property="pLoc.wardName" />
    <result column="ploc.ward_in" jdbcType="VARCHAR" property="pLoc.wardIn" />
    <result column="ploc.ward_group" jdbcType="VARCHAR" property="pLoc.wardGroup" />
    <result column="ploc.ward_desc" jdbcType="VARCHAR" property="pLoc.wardDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 19 00:08:10 ICT 2014.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and test.${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and test.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and test.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and test.${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 19 00:08:10 ICT 2014.
    -->
    
    test.test_id as `test.test_id`,
    test.test_dt as `test.test_dt`, 
    test.dock_dt as `test.dock_dt`,
    test.exec_time as `test.exec_time`,
    test.retry_count as `test.retry_count`,
    test.specimen_type as `test.specimen_type`, 
    test.analyzer_id as `analyzer.analyzer_id`,
 	analyzer.analyzer_serial as `analyzer.analyzer_serial`,
 	analyzer.analyzer_model  as `analyzer.analyzer_model`,
 	analyzer.analyzer_name  as `analyzer.analyzer_name`, 
 	analyzer.analyzer_in as `analyzer.analyzer_id`, 
    analyzer.analyzer_out as `analyzer.analyzer_out`, 
    analyzer.analyzer_desc as `analyzer.analyzer_desc`,
    analyzer.service_code as `analyzer.service_code`, 
    analyzer.analyzer_group_id as `analyzer.analyzer_group_id`,
    test.ward_id as `ward.ward_id`,
    ward.ward_name as `ward.ward_name`,
    ward.ward_in as  `ward.ward_in`,
    ward.ward_group as `ward.ward_group`,
    ward.ward_desc as `ward.ward_desc`,
    staff.staff_id as `staff.staff_id`,
    test.staff_code as `staff.staff_code`,
    staff.staff_usr as `staff.staff_user`,
    staff.staff_pwd as `staff.staff_pwd`,
    staff.staff_code as `staff.staff_code`,
    staff.staff_title as `staff.staff_title`,
    staff.staff_fname as `staff.staff_fname`,
    staff.staff_lname as `staff.staff_lname`, 
    staff.staff_tel as `staff.staff_tel`, 
    staff.staff_mobile as `staff.staff_mobile`,
    staff.staff_mail as `staff.staff_mail`,
    staff.staff_license as `staff.staff_license`,
	staff.role_id as `staff.role_id`,
	test.p_hn as `patient.p_hn`, 
	patient.p_id as `patient.p_id`, 
	patient.p_title as `patient.p_title`, 
	patient.p_fname as `patient.p_fname`, 
	patient.p_lname as `patient.p_lname`, 
	patient.p_title_eng as `patient.p_title_eng`, 
	patient.p_fname_eng as `patient.p_fname_eng`, 
	patient.p_lname_eng as `patient.p_lname_eng`, 
	patient.p_gender as `patient.p_gender`, 
    patient.p_dob as `patient.p_dob`, 
    patient.p_idno as `patient.p_idno`, 
    patient.p_address as `patient.p_address`, 
    patient.p_tel as `patient.p_tel`, 
    patient.p_mobile as `patient.p_mobile`, 
    patient.p_email as `patient.p_email`, 
    patient.p_type as `patient.p_type`, 
    patient.p_registime as `patient.p_registime`, 
    patient.last_update as `patient.last_update`, 
    patient.effective_start_date as `patient.effective_start_date`, 
    patient.effective_end_date as `patient.effective_end_date`,
    test.status as `test.status`, 
    test.comment as `test.comment`, 
    test.labid as `test.labid`, 
    test.bill_id as `test.bill_id`, 
    test.order_id as `test.order_id`, 
    test.update_dt as `test.update_dt`,
    test.isprm as `test.isprm`,
    test.error_code as `test.error_code`,
    test.enc_type as `test.enc_type`,
    test.enc_id as `test.enc_id`,
    test.is_ack as `test.is_ack`,
    test.is_edited as `test.is_edited`,
    test.update_by as `test.update_by`,
    test.rec_by_command as `test.rec_by_command`,
    ploc.ward_id as `ploc.ward_id`,
    ploc.ward_name as `ploc.ward_name`,
    ploc.ward_in as `ploc.ward_in`,
    ploc.ward_group as `ploc.ward_group`,
    ploc.ward_desc as `ploc.ward_desc`
  </sql>
  
  
  <select id="selectByExample" parameterType="com.healthcare.db.model.TestExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 19 00:08:10 ICT 2014.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from test
    LEFT JOIN ward ON ward.ward_id = test.ward_id
    LEFT JOIN ward as ploc ON ploc.ward_id = test.p_loc_id
    LEFT JOIN staff ON staff.staff_id = test.staff_id
    LEFT JOIN analyzer ON analyzer.analyzer_id = test.analyzer_id
    LEFT JOIN patient ON patient.p_hn = test.p_hn 
    WHERE ward.ward_in NOT LIKE 'Reserved %'
    <if test="_parameter != null">
    	AND
    <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and test.${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and test.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and test.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and test.${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
     </if>
    <if test="orderByClause != null">
      order by test.${orderByClause}
    </if>
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Wed Nov 19 00:08:10 ICT 2014.
    -->
    select 
    <include refid="Base_Column_List" />
    from test
    LEFT JOIN ward ON ward.ward_id = test.ward_id
    LEFT JOIN ward as ploc ON ploc.ward_id = test.p_loc_id
    LEFT JOIN staff ON staff.staff_id = test.staff_id
    LEFT JOIN analyzer ON analyzer.analyzer_id = test.analyzer_id
    LEFT JOIN patient ON patient.p_hn = test.p_hn 
    where test.test_id = #{testId,jdbcType=INTEGER}
  </select>
  
  <sql id="TestitemExample_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Sep 22 15:06:06 ICT 2014.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${tableName}.${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${tableName}.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${tableName}.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${tableName}.${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <select id="selectTestItemByExample" resultMap="TestitemFullInfo" parameterType="com.healthcare.db.model.TestitemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    ${tableName}.test_id as `test.test_id`, 
    ${tableName}.item_id as `item.item_id`,
    item.item_name as `item.item_name`, 
    item.unit as `item.unit`, 
    item.item_desc as `item.item_desc`,
    item_range.val_range_lb as `item.range.val_range_lb`, 
    item_range.val_range_ub as `item.range.val_range_ub`, 
    item_range.val_range_clb as `item.range.val_range_clb`, 
    item_range.val_range_cub as `item.range.val_range_cub`,
    ${tableName}.value as `testitem.value`, 
    ${tableName}.errorcode as `testitem.errorcode`
    from ${tableName}
    INNER JOIN item ON ${tableName}.item_id =  item.item_id
    LEFT JOIN item_range ON ${tableName}.item_id = item_range.item_id AND item_range.sex='N'
    INNER JOIN test ON ${tableName}.test_id = test.test_id
    INNER JOIN itemmapping ON test.analyzer_id = itemmapping.analyzer_id AND item.item_id = itemmapping.item_id
    <if test="_parameter != null" >
      <include refid="TestitemExample_Where_Clause" />
    </if>
    order by itemmapping.order_weight desc
    <if test="orderByClause != null" >
    	,${tableName}.${orderByClause}
    </if>
    
    
  </select>
  
  <select id="selectReqiuredItem" resultMap="TestitemFullInfo" parameterType="com.healthcare.db.model.ItemmappingExample" >
    select
	    null as `test.test_id`, 
	    null as `item.item_id`,
	    item.item_name as `item.item_name`, 
	    item.unit as `item.unit`, 
	    item.item_desc as `item.item_desc`,
	    item_range.val_range_lb as `item.range.val_range_lb`, 
	    item_range.val_range_ub as `item.range.val_range_ub`, 
	    item_range.val_range_clb as `item.range.val_range_clb`, 
	    item_range.val_range_cub as `item.range.val_range_cub`,
	    null as `testitem.value`, 
	    null as `testitem.errorcode`
    FROM itemmapping
    INNER JOIN item ON itemmapping.item_id =  item.item_id
    LEFT JOIN item_range ON itemmapping.item_id = item_range.item_id AND item_range.sex='N'
    <if test="_parameter != null" >
      <include refid="TestitemExample_Where_Clause" />
    </if>
    
    order by itemmapping.order_weight desc
    
  </select>
  
</mapper>